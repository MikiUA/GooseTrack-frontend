{"version":3,"file":"static/js/138.2f33c343.chunk.js","mappings":"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","sources":["images/svg/sprite.svg","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ChoosedMonth/ChoosedMonth.styled.js","components/ChoosedMonth/TaskListInBlock.jsx","components/ChoosedMonth/CalendarTable.jsx","components/ChoosedMonth/MonthCalendarHead.jsx","components/ChoosedMonth/ChoosedMonth.jsx","components/CalendarToolbar/components/PeriodPaginator/PeriodPaginator.styled.js","components/CalendarToolbar/components/PeriodPaginator/PeriodPaginator.jsx","components/CalendarToolbar/components/PeriodTypeSelect/PeriodTypeSelect.styled.js","components/CalendarToolbar/components/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarToolbar/CalendarToolbar.jsx","components/Tasks/AddTaskBtn/AddTaskBtn.styled.jsx","components/Tasks/ModalTaskForm/Checkbox/Checkbox.styled.jsx","components/Tasks/ModalTaskForm/Checkbox/Checkbox.jsx","components/Tasks/ModalTaskForm/ModalTaskForm.styled.jsx","components/Tasks/ModalTaskForm/ModalTaskFormStyle.jsx","components/Tasks/ModalTaskForm/ModalTaskForm.jsx","components/Tasks/AddTaskBtn/AddTaskBtn.jsx","components/Tasks/ColumnHeadBar/ColumnHeadBar.styled.jsx","components/Tasks/ColumnHeadBar/ColumnHeadBar.jsx","components/Tasks/TaskToolbar/MoveCardBtn/MoveCardBtn.styled.jsx","components/Tasks/TaskToolbar/MoveCardBtn/MoveCardBtn.jsx","components/Tasks/TaskToolbar/EditCardBtn/EditCardBtn.styled.jsx","components/Tasks/TaskToolbar/EditCardBtn/EditCardBtn.jsx","components/Tasks/TaskToolbar/DeleteCardBtn/DeleteCardBtn.styled.jsx","components/Tasks/TaskToolbar/DeleteCardBtn/DeleteCardBtn.jsx","components/Tasks/TaskToolbar/TaskToolbar.styled.jsx","components/Tasks/TaskToolbar/TaskToolbar.jsx","components/Tasks/TaskModal/TaskModal.jsx","components/Tasks/TaskColumnCard/TaskColumnCard.styled.jsx","components/Tasks/TaskColumnCard/TaskColumnCard.jsx","components/Tasks/ColumnTasksList/ColumnTasksList.styled.jsx","components/Tasks/ColumnTasksList/ColumnTasksList.jsx","components/Tasks/TasksColumn/TasksColumn.styled.jsx","components/Tasks/TasksColumn/TasksColumn.jsx","components/Tasks/TasksColumnsList/TasksColumnsList.styled.jsx","components/Tasks/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ChoosedDay.jsx","pages/CalendarPage/CalendarPage.styled.jsx","pages/CalendarPage/CalendarPage.jsx","utils/Icon/Icon.jsx"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _path, _symbol7;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-circle-broken-right\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M4.451 9.333a13.328 13.328 0 0 1 11.55-6.667c7.364 0 13.333 5.97 13.333 13.333s-5.97 13.333-13.333 13.333a13.329 13.329 0 0 1-11.55-6.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M16 21.333 21.333 16 16 10.667M2.667 16h18.667\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-calendar-check-02\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#84828a\",\n    style: {\n      stroke: \"var(--color1, #84828a)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M28 13.333H4m24 3.334v-4.933c0-2.24 0-3.36-.436-4.216a3.991 3.991 0 0 0-1.748-1.748c-.856-.436-1.976-.436-4.216-.436H10.4c-2.24 0-3.36 0-4.216.436a3.991 3.991 0 0 0-1.748 1.748C4 8.374 4 9.494 4 11.734v11.2c0 2.24 0 3.36.436 4.216a3.991 3.991 0 0 0 1.748 1.748c.856.436 1.976.436 4.216.436H16m5.333-26.667V8M10.667 2.667V8m8.666 17.333L22 28l6-6\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-calendar-check-02-1\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    style: {\n      stroke: \"var(--color2, #3e85f3)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M28 13.333H4m24 3.334v-4.933c0-2.24 0-3.36-.436-4.216a3.991 3.991 0 0 0-1.748-1.748c-.856-.436-1.976-.436-4.216-.436H10.4c-2.24 0-3.36 0-4.216.436a3.991 3.991 0 0 0-1.748 1.748C4 8.374 4 9.494 4 11.734v11.2c0 2.24 0 3.36.436 4.216a3.991 3.991 0 0 0 1.748 1.748c.856.436 1.976.436 4.216.436H16m5.333-26.667V8M10.667 2.667V8m8.666 17.333L22 28l6-6\"\n  })), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M16 10.667v10.667M10.667 16h10.667m7.999 0c0 7.364-5.97 13.333-13.333 13.333S2.667 23.363 2.667 16C2.667 8.636 8.637 2.667 16 2.667S29.333 8.637 29.333 16z\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-moon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color2, #3e85f3)\"\n    },\n    d: \"M27.656 17.393c-.904.24-1.834.361-2.769.361-2.847 0-5.52-1.107-7.528-3.115a10.702 10.702 0 0 1-2.751-10.298 1.33 1.33 0 0 0-.943-1.63 1.345 1.345 0 0 0-.69 0A13.346 13.346 0 0 0 6.99 6.154c-5.197 5.197-5.197 13.657 0 18.857a13.26 13.26 0 0 0 9.429 3.907 13.245 13.245 0 0 0 9.427-3.905 13.343 13.343 0 0 0 3.444-5.988 1.33 1.33 0 0 0-.347-1.285 1.34 1.34 0 0 0-1.285-.346zm-3.696 5.735a10.594 10.594 0 0 1-7.542 3.124 10.585 10.585 0 0 1-7.544-3.125c-4.157-4.159-4.157-10.927 0-15.085a10.562 10.562 0 0 1 2.747-1.977 13.365 13.365 0 0 0 3.854 10.464 13.29 13.29 0 0 0 10.464 3.854 10.704 10.704 0 0 1-1.979 2.745z\"\n  })), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"m3.333 28.667 7.399-2.846c.473-.182.71-.273.931-.392.197-.106.384-.227.56-.364.198-.154.378-.333.736-.692l15.04-15.04A3.77 3.77 0 1 0 22.666 4L7.626 19.04c-.359.359-.538.538-.692.736a3.902 3.902 0 0 0-.364.561c-.119.221-.21.458-.392.931l-2.846 7.399zm0 0 2.744-7.135c.196-.511.295-.766.463-.883a.665.665 0 0 1 .505-.107c.201.038.395.232.782.619l3.012 3.012c.387.387.58.58.619.782a.665.665 0 0 1-.107.505c-.117.168-.372.267-.883.463l-7.135 2.744z\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-sun\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color2, #3e85f3)\"\n    },\n    d: \"M9.324 16c0 3.681 2.995 6.676 6.676 6.676s6.676-2.995 6.676-6.676S19.681 9.324 16 9.324 9.324 12.319 9.324 16zM16 11.991c2.211 0 4.009 1.799 4.009 4.009S18.21 20.009 16 20.009c-2.211 0-4.009-1.799-4.009-4.009S13.79 11.991 16 11.991zm-1.336 13.342h2.667v4h-2.667v-4zm0-22.666h2.667v4h-2.667v-4zm-12 12h4v2.667h-4v-2.667zm22.667 0h4v2.667h-4v-2.667zM5.625 24.484l2.827-2.829 1.887 1.885-2.827 2.829-1.887-1.885zM21.653 8.459l2.829-2.829 1.885 1.885-2.829 2.829-1.885-1.885zM8.456 10.345 5.627 7.516l1.887-1.885 2.827 2.829-1.884 1.885zm17.912 14.14-1.885 1.885-2.829-2.829 1.885-1.885 2.829 2.829z\"\n  })), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash-04\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M12 4h8M4 8h24M6.667 8l.801 12.018c.149 2.231.223 3.347.588 4.243a6 6 0 0 0 3.672 3.435c.919.304 2.037.304 4.273.304 2.236 0 3.354 0 4.273-.304a5.999 5.999 0 0 0 3.671-3.435c.365-.896.439-2.012.588-4.243L25.334 8\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user-check-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#84828a\",\n    style: {\n      stroke: \"var(--color1, #84828a)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M21.333 24 24 26.667l5.333-5.333M16 20.667h-6c-1.861 0-2.791 0-3.548.23a5.331 5.331 0 0 0-3.555 3.556c-.23.757-.23 1.687-.23 3.548v0M13.333 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user-check-01-1\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    style: {\n      stroke: \"var(--color2, #3e85f3)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M21.333 24 24 26.667l5.333-5.333M16 20.667h-6c-1.861 0-2.791 0-3.548.23a5.331 5.331 0 0 0-3.555 3.556c-.23.757-.23 1.687-.23 3.548v0M13.333 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-ph_user\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color1, #3e85f3)\"\n    },\n    opacity: 0.18,\n    d: \"M28.865 26.5c-1.904-3.291-4.838-5.651-8.261-6.77a9.005 9.005 0 0 0 4.074-10.121 9.002 9.002 0 0 0-14.133-4.771 9.002 9.002 0 0 0-2.894 10.519 9.004 9.004 0 0 0 3.745 4.373c-3.424 1.118-6.358 3.478-8.261 6.77a.999.999 0 0 0 .055 1.127 1.01 1.01 0 0 0 .673.389 1 1 0 0 0 1.004-.515c2.355-4.07 6.517-6.5 11.134-6.5s8.779 2.43 11.134 6.5a.995.995 0 0 0 .608.485 1.002 1.002 0 0 0 1.241-.717.997.997 0 0 0-.117-.769zM9 12a7.002 7.002 0 0 1 8.366-6.865A6.999 6.999 0 1 1 9.001 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-ph_user-1\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color2, #fff)\"\n    },\n    opacity: 0.18,\n    d: \"M28.865 26.5c-1.904-3.291-4.838-5.651-8.261-6.77a9.005 9.005 0 0 0 4.074-10.121 9.002 9.002 0 0 0-14.133-4.771 9.002 9.002 0 0 0-2.894 10.519 9.004 9.004 0 0 0 3.745 4.373c-3.424 1.118-6.358 3.478-8.261 6.77a.999.999 0 0 0 .055 1.127 1.01 1.01 0 0 0 .673.389 1 1 0 0 0 1.004-.515c2.355-4.07 6.517-6.5 11.134-6.5s8.779 2.43 11.134 6.5a.995.995 0 0 0 .608.485 1.002 1.002 0 0 0 1.241-.717.997.997 0 0 0-.117-.769zM9 12a7.002 7.002 0 0 1 8.366-6.865A6.999 6.999 0 1 1 9.001 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-log-in-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    style: {\n      stroke: \"var(--color1, #3e85f3)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.526,\n    d: \"M19.789 4.632h1.516c2.122 0 3.183 0 3.994.413a3.786 3.786 0 0 1 1.656 1.656c.413.811.413 1.872.413 3.994v10.611c0 2.122 0 3.183-.413 3.994a3.786 3.786 0 0 1-1.656 1.656c-.811.413-1.872.413-3.994.413h-1.516M13.474 9.684 19.79 16m-.001 0-6.316 6.316M19.789 16H4.631\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Vector\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffac33\",\n    style: {\n      fill: \"var(--color2, #ffac33)\"\n    },\n    d: \"M24.741 32c-.38 0-.758-.122-1.084-.365l-7.656-5.739-7.656 5.739c-.317.239-.698.366-1.089.365s-.771-.132-1.087-.373c-.316-.24-.552-.577-.673-.965s-.124-.805-.005-1.194l2.856-9.633-7.588-5.589c-.314-.243-.548-.582-.668-.971s-.119-.807.001-1.196c.121-.388.356-.726.671-.966s.695-.372 1.085-.374l9.398-.015 2.992-9.394c.123-.387.36-.724.677-.962s.697-.367 1.087-.367.771.128 1.087.367.553.575.677.962l2.941 9.394 9.446.015c.391.002.771.133 1.086.374s.55.58.671.968.121.807.002 1.196-.353.728-.668.97l-7.588 5.589 2.855 9.633c.119.389.117.806-.004 1.194s-.357.725-.673.965a1.792 1.792 0 0 1-1.092.373z\"\n  })), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Vector-1\",\n    viewBox: \"0 0 219 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m28.273 25.301-10.482-7.128 199.352-.006V12.59l-198.103.006 9.874-5.675-2.777-4.835L3.413 15.142l21.723 14.771 3.137-4.612z\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Vector-2\",\n    viewBox: \"0 0 219 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m191.156 5.457 10.482 7.128-199.352.006v5.577l198.103-.006-9.874 5.675 2.778 4.835 22.724-13.056L194.294.845l-3.137 4.612z\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon--\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#cec9c1\",\n    style: {\n      fill: \"var(--color3, #cec9c1)\"\n    },\n    d: \"M24.741 32c-.38 0-.759-.122-1.084-.365l-7.656-5.739-7.656 5.739c-.317.239-.698.366-1.089.365s-.771-.132-1.087-.373c-.316-.24-.552-.577-.673-.965s-.124-.805-.005-1.194l2.856-9.633-7.588-5.589c-.314-.243-.548-.582-.668-.971s-.119-.807.001-1.196c.121-.388.356-.726.671-.966s.695-.372 1.085-.374l9.398-.015 2.992-9.394c.123-.387.36-.724.677-.962s.697-.367 1.087-.367.771.128 1.087.367.553.575.677.962l2.941 9.394 9.446.015c.391.002.771.133 1.086.374s.55.58.671.968.121.807.002 1.196-.353.728-.668.97l-7.588 5.589 2.855 9.633c.119.389.117.806-.004 1.194s-.357.725-.673.965a1.792 1.792 0 0 1-1.092.373z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\"\n  }, /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#111\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M8 1v14M1 8h14\"\n  })))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.5556,\n    d: \"M16 6.667v18.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.5556,\n    d: \"M6.667 16h18.667\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.63b4f09128e3ebb3e20ebb21ea1f7372.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { keyframes } from 'styled-components';\nimport { IoIosClose } from 'react-icons/io';\n\nexport const BackdropStyle = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\nconst fadeInAnimation = keyframes`\n  from {\n    margin-left: 100%;\n    width: 300%;\n  }\n  to {\n    margin-left: 0%;\n    width: 100%;\n  }\n`;\n\nexport const ModalStyle = styled.div`\n  max-width: 300px;\n  width: 85%;\n  min-height: 335px;\n  max-height: 80vh;\n  background-color: #ffffff;\n  padding: 48px 18px 40px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  border-radius: 8px;\n  animation: ${fadeInAnimation} 0.3s ease-in;\n\n  @media (min-width: 375px) {\n    max-width: 395px;\n  }\n\n  @media (min-width: 768px) {\n    max-width: 395px;\n    height: auto;\n    padding: 40px 28px;\n  }\n`;\n\nexport const StyledIcon = styled(IoIosClose)`\n  position: absolute;\n  top: 19px;\n  right: 19px;\n  transition: all 250ms;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n\n  &:hover,\n  &:focus {\n    fill: red;\n  }\n`;\n","import ReactDOM from 'react-dom';\nimport { BackdropStyle, ModalStyle, StyledIcon } from './Modal.styled';\nimport { useEffect } from 'react';\n\nconst Modal = ({ onClose, children, isOpen }) => {\n  useEffect(() => {\n    const handleEscape = e => {\n      if (e.code === `Escape`) {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [onClose]);\n\n  const handleClose = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <BackdropStyle className=\"backdrop\" onClick={handleClose}>\n      <ModalStyle>\n        {children}\n        <StyledIcon onClick={onClose} />\n      </ModalStyle>\n    </BackdropStyle>,\n    document.getElementById('modal-root')\n  );\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\n\nexport const StyledWrapCalendar = styled.div`\n  @media screen and (max-width: 374px) {\n    max-width: 100%;\n  }\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n  }\n`;\n\nexport const CalendarGrid = styled.div`\n  display: grid;\n  max-width: 100%;\n  background-color: #ffffff;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  border-radius: 8px;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    border: 1px solid rgba(220, 227, 229, 0.8);\n  }\n`;\n\nexport const GridCell = styled.div`\n  display: flex;\n  font-size: 10px;\n  justify-content: flex-end;\n  padding-bottom: 64px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  pointer-events: ${props => (props.isNotCurrMonth ? 'none' : 'auto')};\n  opacity: ${props => (props.isNotCurrMonth ? '0.4' : '1')};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    border: 1px solid rgba(220, 227, 229, 0.8);\n  }\n`;\n\nexport const DateWrap = styled.div`\n  display: flex;\n  padding: 4px 6px;\n  justify-content: center;\n  align-items: center;\n\n  font-family: 'Inter';\n  font-style: normal;\n  color: #343434;\n  font-weight: 700;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 8px;\n    margin-right: 4px;\n    font-size: 12px;\n    line-height: 1.17;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n    margin-right: 14px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\nexport const ToDay = styled.div`\n  display: flex;\n  padding: 4px 6px;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Inter';\n  font-style: normal;\n  color: #ffffff;\n  font-weight: 700;\n\n  line-height: 1.17;\n  border-radius: 6px;\n  background-color: #3e85f3;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 8px;\n    margin-right: 4px;\n    font-size: 12px;\n    line-height: 1.17;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n    margin-right: 14px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;","const TaskListInBlock = ({ taskArr = [] }) => {\n    return <>\n        {taskArr.map((task) => {\n            console.log(task);\n            return (<div key={task._id}>\n                {task.title}\n            </div>)\n        })}\n    </>\n}\nexport default TaskListInBlock","import moment from 'moment';\nimport { useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { CalendarGrid, GridCell, DateWrap, ToDay } from './ChoosedMonth.styled';\nimport { useAllTaskQuery } from 'API/taskUtils';\nimport TaskListInBlock from './TaskListInBlock'\n\n\nconst updateValues = (currentDate) => {\n  const today = moment(currentDate).hours(0).minutes(0).seconds(0).milliseconds(0);\n  const currentMonth = today.format('M');\n  const startDay = moment(currentDate).startOf('month').startOf('week');\n  const day = startDay.subtract(1, 'day');\n  const totalDays = 42;\n  const dayArray = [...Array(totalDays)].map(() =>\n    day.add(1, 'day').clone()\n  );\n  const isToday = (calendarDay) => today.isSame(calendarDay);\n\n  return { currentMonth, dayArray, isToday }\n}\nconst tasksObject = (taskArr) => {\n  const object = {}\n  for (const task in taskArr) {\n    const { category, date } = taskArr[task];\n    if (category !== \"to-do\") continue;\n    if (!object[date]) object[date] = [];\n    object[date].push(taskArr[task]);\n  }\n  return object;\n}\nconst CalendarTable = () => {\n  const { currentDate } = useParams();\n  const { data } = useAllTaskQuery(({ startDate: '2010-01-01', endDate: '2030-01-01' }));\n\n  const navigate = useNavigate();\n  const { currentMonth, dayArray, isToday } = useMemo(() => updateValues(currentDate), [currentDate]);\n  const tasks = useMemo(() => tasksObject(data), [data]);\n  const navigateToDate = newDate => {\n    const format = newDate.format('YYYY-MM-DD');\n\n    if (isToday(newDate)) navigate(`/calendar/day/${format}`);\n    else navigate(`/calendar/month/${format}`);\n    // navigate(format);\n  };\n\n  return (\n    <CalendarGrid>\n      {dayArray.map((calendarDay, idx) => (\n        <GridCell onClick={() => navigateToDate(calendarDay)}\n          key={idx + 'cell'}\n          isNotCurrMonth={\n            calendarDay.format('M') !== currentMonth ? true : false\n          }\n        >\n          {isToday(calendarDay)\n            ? <ToDay>{calendarDay.format('D')}</ToDay>\n            : <DateWrap>{calendarDay.format('D')}</DateWrap>\n          }\n          <TaskListInBlock taskArr={tasks[calendarDay.format('YYYY-MM-DD')]} />\n        </GridCell>\n      ))}\n    </CalendarGrid>\n  );\n};\nexport default CalendarTable;\n","import styled from 'styled-components';\n\nconst DivCalendarHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n  margin-bottom: 14px;\n  padding: 18px;\n  background-color: #ffffff;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 40px;\n    border: 1px solid rgba(220, 227, 229, 0.8);\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 14px 60px;\n  }\n`;\n\nconst CalendarHeaderCell = styled.div`\n  color: ${props => (props.isWeekDay ? '#3E85F3;' : '#343434')};\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0;\n  line-height: 1.12;\n\n  text-transform: uppercase;\n  overflow: hidden;\n  &:not(:last-child) {\n    margin-right: 34px;\n  }\n  &:first-letter {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    &:not(:last-child) {\n      margin-right: 62px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    &:not(:last-child) {\n      margin-right: 122px;\n    }\n  }\n`;\nconst daysName = ['mon', 'tue', 'wen', 'thu', 'fri', 'sat', 'sun'];\n\nconst MonthCalendarHead = () => {\n\n  return (\n    <DivCalendarHead>\n      {daysName.map((day, idx) => (\n        <CalendarHeaderCell key={idx} isWeekDay={idx >= 5 ? true : false}>\n          {day}\n        </CalendarHeaderCell>\n      ))}\n    </DivCalendarHead>\n  );\n};\n\nexport default MonthCalendarHead;\n","// MonthCalendarHead\n// CalendarTable\nimport moment from 'moment';\n\nimport CalendarTable from './CalendarTable';\nimport MonthCalendarHead from './MonthCalendarHead';\nimport { StyledWrapCalendar } from './ChoosedMonth.styled';\n\nmoment.updateLocale('en', { week: { dow: 1 } });\n\n\nconst ChoosedMonth = () => {\n\n  return (\n    <StyledWrapCalendar>\n      <MonthCalendarHead />\n      <CalendarTable />\n    </StyledWrapCalendar>\n  );\n};\n\nexport default ChoosedMonth;\n","import styled from '@emotion/styled';\nimport { styled as styledMui } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\n\nexport const PeriodPaginationWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  justify-content: space-between;\n`;\n\nexport const DateField = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 152px;\n  height: 30px;\n  color: white;\n  background-color: #3e85f3;\n  border-radius: 8px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.29;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledLink = styledMui(Button)(({ theme }) => `\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n  width: 36px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  font-size: 18px;\n  background-color: ${theme.palette.background.paper};\n  color:${theme.palette.text.primary};\n  cursor: pointer;\n\n  &:first-of-type {\n    border-radius: 8px 0px 0px 8px;\n  }\n\n  &:nth-of-type(2) {\n    border-radius: 0px 8px 8px 0px;\n    border-left: none;\n  }\n\n  &:nth-of-type(2):hover {\n    border-left: 1px solid rgba(220, 227, 229, 0.8);\n  }\n\n  &:hover {\n    box-shadow: 4px 2px 16px rgba(136, 165, 191, 0.48);\n    transform: scale(1.05);\n  }\n\n  &:disabled {\n    pointer-events: none;\n    opacity: 0.5;\n  }\n`);\n","import React, { useMemo } from 'react';\nimport {\n  PeriodPaginationWrapper,\n  DateField,\n  ButtonsWrapper,\n  StyledLink,\n} from './PeriodPaginator.styled';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { useNavigate, useParams } from 'react-router';\nimport { Box } from '@mui/material';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/en'; // Импорт английской локали для названий месяцев\n\nfunction checkIfLessAllowed(currentDate) {\n  //this thing allows us to go one month prior to current date. This is intentional. use <= to not allow it\n  //Есть кейс когда невозможно переключиться на предыдущий месяц, если выбранная дата этого месяца раньше текущей, теоретически во второй обьект нужно добавить не текущую дату а первое число месяца\n  //на самом деле можно просто добавить первое число прошлого месяца во второй обьект и заменить < на <=\n  if (dayjs(currentDate) < dayjs()) return false;\n  return true;\n}\n\nexport default function PeriodPaginator({\n  isDay,\n}) {\n  const { currentDate } = useParams();\n  const navigate = useNavigate();\n  const isLessAllowed = useMemo(() => checkIfLessAllowed(currentDate), [currentDate]);\n  const formattedDate =\n    isDay\n      ? dayjs(currentDate).format('DD MMMM YYYY')\n      : dayjs(currentDate).format('MMMM YYYY');\n\n  // const shouldDisable = date < Date.now();\n  function getNavigateLink(isDay, isBackward) {\n    const type = isDay ? 'day' : 'month';\n    const dateForLink = dayjs(currentDate).add(!isBackward ? 1 : -1, type).format('YYYY-MM-DD');\n    return `/calendar/${type}/${dateForLink}`\n  }\n  return (\n    <PeriodPaginationWrapper>\n      <Box>\n        <DateField>{formattedDate}</DateField>\n      </Box>\n      <ButtonsWrapper>\n        <StyledLink onClick={() => navigate(getNavigateLink(isDay, true))} disabled={!isLessAllowed}>\n          <NavigateBeforeIcon />\n        </StyledLink>\n        <StyledLink onClick={() => navigate(getNavigateLink(isDay))}>\n          <NavigateNextIcon />\n        </StyledLink>\n      </ButtonsWrapper>\n    </PeriodPaginationWrapper>\n  );\n}\n\n// import { useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import dayjs from 'dayjs';\n// import {\n//   ButtonsWrapper,\n//   DateField,\n//   PeriodPaginationWrapper,\n//   StyledHiChevronLeft,\n//   StyledHiChevronRight,\n//   StyledLink,\n//   StyledLinkToday,\n// } from './PeriodPaginator.styled';\n// import { useAuth } from 'hooks';\n\n// export default function PeriodPaginator({\n//   activeDate,\n//   changeActiveDay,\n//   isDayPage,\n//   currentDate,\n// }) {\n//   const { user } = useAuth();\n//   const date = isDayPage\n//     ? activeDate.format('DD MMMM YYYY')\n//     : activeDate.format('MMMM YYYY');\n\n//   const dateForLinkNext = isDayPage\n//     ? activeDate.add(1, 'day').format('DDMMMMYYYY')\n//     : activeDate.add(1, 'month').format('MMMMYYYY');\n\n//   const dateForLinkPrev = isDayPage\n//     ? activeDate.subtract(1, 'day').format('DDMMMMYYYY')\n//     : activeDate.subtract(1, 'month').format('MMMMYYYY');\n\n//   const isCreatedAtDay = isDayPage\n//     ? dayjs(user.createdAt).startOf('day').isSameOrBefore(activeDate)\n//     : dayjs(user.createdAt).startOf('month').isSameOrBefore(activeDate);\n\n//   return (\n//     <PeriodPaginationWrapper>\n//       <div>\n//         <DateField>{date}</DateField>\n//       </div>\n//       <ButtonsWrapper>\n//         {isDayPage ? (\n//           <>\n//             <StyledLink\n//               disabled={isCreatedAtDay}\n//               onClick={() => changeActiveDay(-1)}\n//               to={`/calendar/day/${dateForLinkPrev}`}\n//             >\n//               <StyledHiChevronLeft />\n//             </StyledLink>\n//             <StyledLink\n//               onClick={() => changeActiveDay(1)}\n//               to={`/calendar/day/${dateForLinkNext}`}\n//             >\n//               <StyledHiChevronRight />\n//             </StyledLink>\n\n//             <StyledLinkToday\n//               onClick={() => changeActiveDay(0)}\n//               to={`/calendar/day/${dateForLinkToday}`}\n//             >\n//               Today\n//             </StyledLinkToday>\n//           </>\n//         ) : (\n//           <>\n//             <StyledLink\n//               disabled={isCreatedAtDay}\n//               to={`/calendar/month/${dateForLinkPrev}`}\n//               onClick={() => changeActiveDay(-1)}\n//             >\n//               <StyledHiChevronLeft />\n//             </StyledLink>\n\n//             <StyledLink\n//               to={`/calendar/month/${dateForLinkNext}`}\n//               onClick={() => changeActiveDay(1)}\n//             >\n//               <StyledHiChevronRight />\n//             </StyledLink>\n//             <StyledLinkToday\n//               onClick={() => changeActiveDay(0)}\n//               to={`/calendar/month/${dateForLinkToday}`}\n//             >\n//               Today\n//             </StyledLinkToday>\n//           </>\n//         )}\n//       </ButtonsWrapper>\n//     </PeriodPaginationWrapper>\n//   );\n// }\n","import { styled } from '@mui/material/styles';\nimport { styled as styledMui } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nexport const ButtonsWrapper = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  backgroundColor: '#cae8ff',\n  borderRadius: theme.spacing(1),\n  width: ' 152px',\n  height: '34px',\n}));\n\nexport const StyledLink = styledMui(Button)(({ theme }) => ({\n  // display: 'flex',\n  // justifyContent: 'center',\n  // alignItems: 'center',\n  padding: 0,\n  height: 34,\n  width: 76,\n  border: 'none',\n  fontSize: 14,\n  fontWeight: 500,\n  lineHeight: 1.29,\n  backgroundColor:\n    theme.palette.mode === 'light'\n      ? theme.palette.customLightBlueButton.background\n      : theme.palette.background.paper,\n  color: theme.palette.customLightBlueButton.text,\n  borderRight: `0 solid ${theme.palette.primary.main}`,\n  '&:first-of-type': {\n    borderRadius: `${theme.spacing(1)} 0 0 ${theme.spacing(1)}`,\n  },\n  '&:last-of-type': {\n    borderRadius: `0 ${theme.spacing(1)} ${theme.spacing(1)} 0`,\n    borderLeft: `0 solid ${theme.palette.primary.main}`,\n  },\n  '&:hover': {\n    boxShadow: `4px 2px 16px ${theme.palette.primary.dark}`,\n    // transform: 'scale(1.07)',\n  },\n  '&:disabled':\n    theme.palette.mode === 'light'\n      ? {\n          backgroundColor: '#C0E0Ff',\n          color: theme.palette.customLightBlueButton.text,\n        }\n      : {\n          backgroundColor: theme.palette.primary.main,\n          color: theme.palette.text.primary,\n        },\n}));\n","import React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ButtonsWrapper, StyledLink } from './PeriodTypeSelect.styled';\nimport Typography from '@mui/material/Typography';\n\nexport default function PeriodTypeSelect({ isDay }) {\n  const { currentDate } = useParams();\n  const navigate = useNavigate();\n  return (\n    <ButtonsWrapper>\n      <StyledLink\n        onClick={() => navigate(`/calendar/month/${currentDate}`)}\n        disabled={!isDay}\n      >\n        <Typography sx={{ textTransform: 'none' }}>Month</Typography>\n      </StyledLink>\n      <StyledLink\n        onClick={() => navigate(`/calendar/day/${currentDate}`)}\n        disabled={isDay}\n      >\n        <Typography sx={{ textTransform: 'none' }}>Day</Typography>\n      </StyledLink>\n    </ButtonsWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const CalendarToolbarWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 18px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  width: 100%;\n  max-width: 100%;\n  max-height: 100%;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    margin-bottom: 32px;\n    max-width: 704px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    max-width: 1100px;\n  }\n`;\n","import React from 'react';\nimport PeriodPaginator from './components/PeriodPaginator/PeriodPaginator';\nimport PeriodTypeSelect from './components/PeriodTypeSelect/PeriodTypeSelect';\nimport { CalendarToolbarWrapper } from './CalendarToolbar.styled';\n\n\nexport default function CalendarToolbar({ typePeriod }) {\n\n  return (\n    <CalendarToolbarWrapper>\n      <PeriodPaginator\n        isDay={typePeriod === 'day'}\n      />\n      <PeriodTypeSelect isDay={typePeriod === 'day'} />\n    </CalendarToolbarWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport Icon from 'utils/Icon/Icon';\n\nexport const Button = styled.button`\n    padding-top: 15px;\n    padding-bottom: 15px;\n    margin-right: 12px;\n    text-align: center;\n    border-radius: 8px;\n    border: 1px dashed #3E85F3;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.29;\n    cursor: pointer;\n    background-color: #E3F3FF;\n`;\n\nexport const ButtonIcon = styled.button`\n    cursor: pointer;\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n`\n\nexport const ButtonIconStyled = styled(Icon)`\n        stroke: #111;\n        transition: linear 0.3s;\n\n        &:hover,\n        &:focus {\n            stroke: #3e85f3;\n        }\n`\nexport const ButtonIconStyledPlus = styled(Icon)`\n        margin-right: 8px;\n        stroke: #111;\n        transition: linear 0.3s;\n\n        &:hover,\n        &:focus {\n            stroke: #3e85f3;\n        }\n`\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const Text = styled.p`\n    margin: 0;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.29;\n    color: #111;\n`","import styled from 'styled-components';\n\nexport const CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CheckboxInput = styled.input`\n  display: none;\n`;\n\nexport const CheckboxStyle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  border: ${prop => `1px solid ${prop.color}`};\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${prop => (prop.checked ? `${prop.color}80` : prop.color)};\n`;\nexport const InnerCircleStyle = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${prop => prop.color};\n  border: ${prop => (prop.checked ? '1px solid #ffffff' : 'none')};\n`;\n\nexport const CheckboxSpan = styled.span`\n  margin-left: 5px;\n  font-family: 'Inter';\n  font-weight: 600;\n`;\n","import {\n  CheckboxInput,\n  CheckboxLabel,\n  CheckboxSpan,\n  CheckboxStyle,\n  InnerCircleStyle,\n} from './Checkbox.styled';\n\nconst Checkbox = ({ value, checked, label, onChange, color }) => {\n  const handleCheckboxChange = () => {\n    onChange(value);\n  };\n\n  return (\n    <CheckboxLabel>\n      <CheckboxInput\n        type=\"checkbox\"\n        value={value}\n        checked={checked}\n        onChange={handleCheckboxChange}\n        required\n      />\n      <CheckboxStyle checked={checked} color={color}>\n        {checked && <InnerCircleStyle checked={checked} color={color} />}\n      </CheckboxStyle>\n      <CheckboxSpan>{label}</CheckboxSpan>\n    </CheckboxLabel>\n  );\n};\n\nexport default Checkbox;\n","import styled from 'styled-components';\n\nexport const TaskForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 19px;\n`;\n\nexport const TaskFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const TaskFormLabel = styled.label`\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  color: rgba(52, 52, 52, 0.8);\n  margin-bottom: 8px;\n  /* @media screen and (min-width: 768px) {\n  }\n  @media screen and(min-width: 1440px) {\n  } */\n`;\nexport const TaskFormInputWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  width: 100%;\n  margin-top: 18px;\n`;\nexport const TaskFormLabelWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TaskFormCheckboxWrap = styled.div`\n  display: flex;\n  gap: 26px;\n  align-self: flex-start;\n  margin: 16px 0 32px;\n`;\n\nexport const TaskFormButtonWrap = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const TaskFormButtonAdd = styled.button`\n  width: 135px;\n  height: 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 16px 8px 20px;\n  border: none;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  width: 135px;\n  height: 42px;\n  color: #ffffff;\n  background-color: #3e85f3;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease-in;\n  &:hover {\n    background-color: #1565c0;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const TaskFormButtonAddSpan = styled.span`\n  margin-right: 10px;\n`;\n\nexport const TaskFormButtonCancel = styled.button`\n  width: 135px;\n  height: 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 16px 8px 20px;\n  border: none;\n  width: 118px;\n  height: 42px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  color: #111111;\n  background-color: #efefef;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.3s, box-shadow 0.3s;\n  &:hover {\n    background-color: #dad7d7;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n","import { styled } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { TimeField } from '@mui/x-date-pickers/TimeField';\n\nexport const CustomTextField = styled(TextField)`\n  & input::placeholder {\n    font-family: 'Inter';\n    font-weight: 600;\n    font-size: 14px;\n    color: #343434;\n  }\n`;\n\nexport const CustomTimeField = styled(TimeField)`\n  & input::placeholder {\n    font-family: 'Inter';\n    font-weight: 600;\n    font-size: 14px;\n    color: #343434;\n  }\n`;\n","import dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { useEffect, useState } from 'react';\nimport Checkbox from './Checkbox/Checkbox';\nimport {\n  TaskForm,\n  TaskFormButtonAdd,\n  TaskFormButtonAddSpan,\n  TaskFormButtonCancel,\n  TaskFormButtonWrap,\n  TaskFormCheckboxWrap,\n  TaskFormInputWrap,\n  TaskFormLabel,\n  TaskFormLabelWrap,\n  TaskFormWrap,\n} from './ModalTaskForm.styled';\nimport { CustomTextField, CustomTimeField } from './ModalTaskFormStyle';\nimport { useParams } from 'react-router-dom';\n\nconst ModalTaskForm = ({ onClose, handleSubmit, category }) => {\n  const [startValue, setStartValue] = useState(dayjs('2022-04-17T09:00'));\n  const [endValue, setEndValue] = useState(dayjs('2022-04-17T14:00'));\n  const [selectedOption, setSelectedOption] = useState('');\n  const [formTitle, setFormTitle] = useState('');\n  const [isFormValid, setIsFormValid] = useState(false);\n  const { currentDate } = useParams();\n\n  useEffect(() => {\n    const isValid = formTitle !== '' && selectedOption !== '';\n    setIsFormValid(isValid);\n  }, [formTitle, selectedOption]);\n\n  const handleCheckboxChange = value => {\n    setSelectedOption(value);\n  };\n\n  const handleFormSubmit = () => {\n    if (isFormValid) {\n      handleSubmit({\n        title: formTitle,\n        start: startValue.format('HH:mm'),\n        end: endValue.format('HH:mm'),\n        priority: selectedOption,\n        date: currentDate,\n        category: category,\n      });\n    }\n  };\n\n  return (\n    <>\n      <TaskForm>\n        <TaskFormWrap>\n          <TaskFormLabel htmlFor=\"outlined-basic\">Title</TaskFormLabel>\n          <CustomTextField\n            id=\"outlined-basic\"\n            variant=\"outlined\"\n            placeholder=\"Enter text\"\n            onChange={event => setFormTitle(event.target.value)}\n            required\n          />\n        </TaskFormWrap>\n        <TaskFormInputWrap>\n          <TaskFormLabelWrap>\n            <TaskFormLabel htmlFor=\"start\">Start</TaskFormLabel>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <CustomTimeField\n                id=\"start\"\n                value={startValue}\n                onChange={newValue => setStartValue(newValue)}\n                format=\"HH:mm\"\n              />\n            </LocalizationProvider>\n          </TaskFormLabelWrap>\n          <TaskFormLabelWrap>\n            <TaskFormLabel htmlFor=\"end\">End</TaskFormLabel>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <CustomTimeField\n                id=\"end\"\n                value={endValue}\n                onChange={newValue => setEndValue(newValue)}\n                format=\"HH:mm\"\n              />\n            </LocalizationProvider>\n          </TaskFormLabelWrap>\n        </TaskFormInputWrap>\n        <TaskFormCheckboxWrap>\n          <Checkbox\n            value=\"low\"\n            label=\"Low\"\n            checked={selectedOption === 'low'}\n            onChange={() => handleCheckboxChange('low')}\n            color=\"#72C2F8\"\n          />\n          <Checkbox\n            value=\"medium\"\n            label=\"Medium\"\n            checked={selectedOption === 'medium'}\n            onChange={() => handleCheckboxChange('medium')}\n            color=\"#F3B249\"\n          />\n          <Checkbox\n            value=\"high\"\n            label=\"High\"\n            checked={selectedOption === 'high'}\n            onChange={() => handleCheckboxChange('high')}\n            color=\"#EA3D65\"\n          />\n        </TaskFormCheckboxWrap>\n        <TaskFormButtonWrap>\n          <TaskFormButtonAdd type=\"button\" onClick={handleFormSubmit}>\n            <TaskFormButtonAddSpan>+</TaskFormButtonAddSpan> <span>Add</span>\n          </TaskFormButtonAdd>\n          <TaskFormButtonCancel onClick={onClose}>Cancel</TaskFormButtonCancel>\n        </TaskFormButtonWrap>\n      </TaskForm>\n    </>\n  );\n};\nexport default ModalTaskForm;\n","import { Button, ButtonIcon, ButtonIconStyled, ButtonIconStyledPlus, Container, Text } from './AddTaskBtn.styled';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport ModalTaskForm from '../ModalTaskForm/ModalTaskForm';\nimport { useAddTaskMutation } from 'API/taskUtils';\n\nconst AddTaskBtn = ({ columnHeadBtn,category }) => {\n  const [isModalOpen, setIsOpenModal] = useState(false);\n  const handleToggle = () => setIsOpenModal(pS => !pS);\n\n  const [addTask] = useAddTaskMutation();\n\n  const handleSubmit = async ({\n    title,\n    start,\n    end,\n    priority,\n    date,\n    category,\n  }) => {\n    try {\n      const res = await addTask({\n        title: title,\n        start: start,\n        end: end,\n        priority: priority,\n        date: date,\n        category: category,\n      });\n      console.log(res);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      {columnHeadBtn ? (\n        <ButtonIcon type=\"button\">\n          <ButtonIconStyled name=\"icon-icon\" width=\"20\" height=\"20\" />\n        </ButtonIcon>\n      ) : (\n          <Button type=\"button\" onClick={handleToggle}>\n            <Container>\n              <ButtonIconStyledPlus name=\"icon-plus\" width=\"16\" height=\"16\" />\n              <Text>Add task</Text>\n            </Container>\n        </Button>\n      )}\n      <Modal onClose={handleToggle} isOpen={isModalOpen}>\n        <ModalTaskForm onClose={handleToggle} handleSubmit={handleSubmit} category={category}/>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddTaskBtn;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 30px;\n\n    @media screen and (min-width: 768px) {\n        margin-bottom: 35px;\n    }\n`;\n\nexport const Title = styled.h2`\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 1.11;\n    margin: 0;\n\n    @media screen and (min-width: 768px) {\n        line-height: 24px;\n    }\n`;","import AddTaskBtn from \"../AddTaskBtn/AddTaskBtn\";\nimport { Container, Title } from \"./ColumnHeadBar.styled\";\n\n\nconst ColumnHeadBar = ({taskColumnTitle}) => {\n    return (\n        <Container>\n            <Title>{taskColumnTitle}</Title>\n            <AddTaskBtn columnHeadBtn />\n        </Container>\n    )\n}\n\nexport default ColumnHeadBar;","import styled from 'styled-components';\nimport Icon from 'utils/Icon/Icon';\n\n\nexport const Button = styled.button`\n    cursor: pointer;\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n`\n\nexport const IconStyled = styled(Icon)`\n        stroke: #111;\n        transition: linear 0.3s;\n\n        &:hover,\n        &:focus {\n            stroke: #3e85f3;\n        }\n`","import { Button, IconStyled } from \"./MoveCardBtn.styled\";\n\n\nconst MoveCardBtn = () => {\n    return (\n        <li>\n            <Button>\n                <IconStyled name=\"icon-arrow-circle-broken-right\" width=\"16\" height=\"16\"/>\n            </Button>\n        </li>\n    )\n}\n\nexport default MoveCardBtn","import styled from 'styled-components';\nimport Icon from 'utils/Icon/Icon';\n\n\nexport const Button = styled.button`\n    cursor: pointer;\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n`\n\nexport const IconStyled = styled(Icon)`\n        stroke: #111;\n        transition: linear 0.3s;\n\n        &:hover,\n        &:focus {\n            stroke: #3e85f3;\n        }\n`","import { Button, IconStyled } from \"./EditCardBtn.styled\";\n\n\nconst EditCardBtn = () => {\n    return (\n        <li>\n            <Button>\n                <IconStyled name=\"icon-pencil-01\" width=\"16\" height=\"16\"/>\n            </Button>\n        </li>\n    )\n}\n\nexport default EditCardBtn","import styled from 'styled-components';\nimport Icon from 'utils/Icon/Icon';\n\n\nexport const Button = styled.button`\n    cursor: pointer;\n    border: none;\n    background-color: rgba(0, 0, 0, 0);\n`\n\nexport const IconStyled = styled(Icon)`\n        stroke: #111;\n        transition: linear 0.3s;\n\n        &:hover,\n        &:focus {\n            stroke: #3e85f3;\n        }\n`","import { Button, IconStyled } from \"./DeleteCardBtn.styled\";\n\n\nconst DeleteCardBtn = () => {\n    return (\n        <li>\n            <Button>\n                <IconStyled name=\"icon-trash-04\" width=\"16\" height=\"16\" />\n            </Button>\n        </li>\n    )\n}\n\nexport default DeleteCardBtn;","import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n    display: flex;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    gap: 10px;\n`","import MoveCardBtn from \"./MoveCardBtn/MoveCardBtn\"\nimport EditCardBtn from \"./EditCardBtn/EditCardBtn\"\nimport DeleteCardBtn from \"./DeleteCardBtn/DeleteCardBtn\"\nimport { List } from \"./TaskToolbar.styled\"\n\n\nconst TaskToolbar = () => {\n    return (\n        <List>\n            <MoveCardBtn />\n            <EditCardBtn />\n            <DeleteCardBtn /> \n        </List>\n    )\n}\n\nexport default TaskToolbar","\n//потрібно доробити. Створив виключно для того, щоб підтянути цей компонент до компоненту TaskColumnCard\nconst TaskModal = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default TaskModal","import styled from 'styled-components';\n\n\nexport const Item = styled.li`\n    padding: 14px 12px 18px 15px;\n    margin-bottom: 14px;\n    margin-right: 6px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.8);\n    background-color: #F7F6F9;\n\n    @media screen and (min-width: 768px) {\n        margin-bottom: 18px;\n    }\n`;\n\nexport const Title = styled.h3`\n    /* width: 100%; */\n    padding: 0;\n    margin: 0 0 28px 0;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.29;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n\n    @media screen and (min-width: 768px) {\n        margin: 0 0 32px 0;\n    }\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`;\n\nexport const ContainerInfo = styled.div`\n    display: flex;\n    align-items: flex-end;\n`;\n\nexport const ContainerUser = styled.div`\n    display: flex;\n    margin-right: 8px;\n    border: 1.8px solid #3E85F3;\n    border-radius: 50%;\n    object-fit: cover;\n`;\n\nexport const Priority = styled.span`\n    color: #F7F6F9;\n    border-radius: 4px;\n    font-weight: 600;\n    font-size: 10px;\n    line-height: 1.2;\n    padding: 4px 12px;\n    background-color: ${props => props.backgroundColor};\n`;\n","import TaskToolbar from \"../TaskToolbar/TaskToolbar\";\nimport TaskModal from \"../TaskModal/TaskModal\";\nimport {\n    Item,\n    Title,\n    Container,\n    ContainerInfo,\n    ContainerUser,\n    Priority\n} from \"./TaskColumnCard.styled\";\n\nimport Icon from \"utils/Icon/Icon\";\n\n\nconst TaskColumnCard = ({title, priority, id, task}) => {\n\n    let componentStyle;\n\n    switch (priority) {\n        case \"low\":\n            componentStyle = { backgroundColor: \"#72C2F8\" };\n            break;\n\n        case \"medium\":\n            componentStyle = { backgroundColor: \"#F3B249;\" };\n            break;\n        \n        case \"high\":\n            componentStyle = { backgroundColor: \"#EA3D65\" };\n            break;\n        \n        default:\n            break;\n    }\n\n\n    return (\n        <Item>\n            <Title>{title}</Title>\n            <Container>\n                <ContainerInfo>\n                    <ContainerUser>\n                        <Icon name=\"icon-ph_user\" width=\"32\" height=\"32\" />\n                    </ContainerUser>\n                    <Priority backgroundColor={componentStyle.backgroundColor}>{priority}</Priority>\n                </ContainerInfo>\n                <TaskToolbar id={id} task={task} />\n            </Container>\n            <TaskModal />\n        </Item>\n    )\n}\n\nexport default TaskColumnCard;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    overflow-y: auto;\n    margin: 0;\n    padding: 0;\n\n    &::-webkit-scrollbar {\n        width: 6px;\n        border-radius: 12px;\n        background-color: #F2F2F2;   \n    };\n\n    &::-webkit-scrollbar-thumb {\n        border-radius: 12px;\n        background-color: #E7E5E5;\n    };\n`;\n","import TaskColumnCard from \"../TaskColumnCard/TaskColumnCard\";\nimport { List } from \"./ColumnTasksList.styled\";\n\n\nconst ColumnTasksList = ({tasks}) => {\n    return (\n        <List>\n            {tasks !== 0 && tasks.map(({title, _id, priority}) => (\n                <TaskColumnCard key={_id} title={title} priority={priority} />\n            ))}\n        </List>\n    )\n}\n\nexport default ColumnTasksList;","import styled from 'styled-components';\n\n\nexport const Item = styled.li`\n    display: flex;\n    flex-direction: column;\n    margin-left: 16px;\n    margin-top: 16px;\n    padding: 25px 18px 10px 18px;\n    width: calc(100% - 40px);\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.5);\n    background-color: #fff;\n\n    @media screen and (min-width: 376px) {\n        width: 335px;\n    }\n\n    @media screen and (min-width: 768px) {\n        min-width: calc(100% / 2 - 56px);\n        padding: 25px 23px 32px 20px;\n    }\n\n    @media screen and (min-width: 1440px) {\n        min-width: calc(100% / 3 - 56px);\n        padding: 25px 23px 28px 20px;\n    }\n`;","import ColumnHeadBar from \"../ColumnHeadBar/ColumnHeadBar\";\nimport ColumnTasksList from \"../ColumnTasksList/ColumnTasksList\";\nimport AddTaskBtn from \"../AddTaskBtn/AddTaskBtn\";\nimport { Item } from \"./TasksColumn.styled\";\n\n\nconst TasksColumn = ({taskColumnTitle, tasks,category}) => {\n    return (\n        <Item>\n            <ColumnHeadBar taskColumnTitle={taskColumnTitle} />\n\n            {tasks && <ColumnTasksList tasks={tasks} />}\n\n            <AddTaskBtn category={category}/>\n        </Item>\n    )\n}\n\nexport default TasksColumn;","import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: row;\n    overflow: auto;\n    padding: 0 0 34px 0;\n    margin: -16px 0 0 -16px;\n    list-style: none;\n    max-height: 432px;\n\n    @media screen and (min-width: 768px) {\n        max-height: 568px;\n        padding-bottom: 150px;\n        justify-content: space-between;\n    }\n\n    @media screen and (min-width: 1440px) {\n        max-height: 568px;\n        padding-bottom: 0;\n        justify-content: space-between;\n    }\n\n    &::-webkit-scrollbar {\n        height: 12px;\n        border-radius: 12px;\n        background-color: #F2F2F2;\n    }\n\n    &::-webkit-scrollbar-thumb {\n        border-radius: 12px;\n        background-color: #E7E5E5;\n    }\n`\n","import { useParams } from \"react-router\";\nimport TasksColumn from \"../TasksColumn/TasksColumn\";\nimport { List } from \"./TasksColumnsList.styled\";\nimport { useAllTaskQuery } from \"API/taskUtils\";\nimport { useMemo } from \"react\";\n\n\n\nconst taskTypes = {\n    \"To do\": \"to-do\",\n    \"In Progress\": \"in-progress\",\n    \"Done\": \"done\"\n}\n\nconst getTodayTasksFromAll = (currentDay, data = []) => {\n    function checkValididty(task, taskType) {\n        if (task.date !== currentDay) return false;\n        if (task.category !== taskType) return false;\n        return true;\n    }\n    return Object.fromEntries(Object.entries(taskTypes).map(([title, type]) => {\n        const arr = data.filter((task) => checkValididty(task, type)) || [];\n        return [title, arr];\n    }));\n}\n\nconst TasksColumnsList = () => {\n    const { currentDate } = useParams();\n    const { data } = useAllTaskQuery(({ startDate: '2010-01-01', endDate: '2030-01-01' }));\n    const todayTasks = useMemo(() => getTodayTasksFromAll(currentDate, data), [currentDate, data])\n\n    return (\n        <List> {\n            Object.keys(taskTypes).map(taskColumnTitle => (\n                <TasksColumn\n                    key={taskColumnTitle}\n                    taskColumnTitle={taskColumnTitle}\n                    tasks={todayTasks[taskColumnTitle]}\n                    category={taskTypes[taskColumnTitle]} />))}\n        </List>\n    )\n}\n\nexport default TasksColumnsList;","// DayCalendarHead\n// TasksComulmnList\n\nimport TasksColumnsList from \"components/Tasks/TasksColumnsList/TasksColumnsList\";\n\n//цей компонент потрібно доробити, так як я його створив виключно для того, щоб вписати туди TasksColumnsList\n\nconst ChoosedDay = () => {\n    return (\n        <div>\n            <TasksColumnsList />\n        </div>\n  );\n}\n\nexport default ChoosedDay;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    padding: 24px 20px 20px 20px ;\n    background-color: #F7F6F9; \n\n  @media screen and (min-width: 768px) {\n      padding: 24px 32px 42px 32px;\n    }\n`","//CalendarToolbar\n//ChoosedDay\n//ChoosedMonth\nimport ChoosedMonth from 'components/ChoosedMonth/ChoosedMonth';\nimport CalendarToolbar from 'components/CalendarToolbar/CalendarToolbar';\nimport ChoosedDay from 'components/ChoosedDay/ChoosedDay';\nimport { Container } from './CalendarPage.styled';\n\nconst CalendarPage = ({ variant }) => {\n  return (\n    <Container>\n      <CalendarToolbar typePeriod={variant} />\n      {variant === 'month' ? <ChoosedMonth /> : <ChoosedDay />}\n    </Container>\n  );\n};\n\nexport default CalendarPage;\n","import React from 'react';\nimport sprite from \"images/svg/sprite.svg\"\n\nconst Icon = ({ name, width= 24, height=24, className }) => {\nconsole.log(sprite)\n  return (\n      <svg\n      className={className} \n      width={width}\n      height={height}>\n\n      <use href={`${sprite}#${name}`}></use>\n    </svg>\n  );\n};\n\nexport default Icon;"],"names":["BackdropStyle","styled","fadeInAnimation","keyframes","ModalStyle","StyledIcon","IoIosClose","onClose","children","isOpen","useEffect","handleEscape","e","code","window","addEventListener","removeEventListener","ReactDOM","className","onClick","target","currentTarget","document","getElementById","StyledWrapCalendar","CalendarGrid","GridCell","props","isNotCurrMonth","DateWrap","ToDay","taskArr","map","task","console","log","title","_id","currentDate","useParams","data","useAllTaskQuery","startDate","endDate","navigate","useNavigate","useMemo","today","moment","hours","minutes","seconds","milliseconds","currentMonth","format","day","startOf","subtract","dayArray","Array","add","clone","isToday","calendarDay","isSame","updateValues","tasks","object","category","date","push","tasksObject","idx","newDate","navigateToDate","DivCalendarHead","CalendarHeaderCell","isWeekDay","daysName","week","dow","PeriodPaginationWrapper","DateField","ButtonsWrapper","StyledLink","styledMui","Button","theme","palette","background","paper","text","primary","PeriodPaginator","isDay","isLessAllowed","dayjs","checkIfLessAllowed","formattedDate","getNavigateLink","isBackward","type","dateForLink","Box","disabled","NavigateBefore","NavigateNext","display","backgroundColor","borderRadius","spacing","width","height","padding","border","fontSize","fontWeight","lineHeight","mode","customLightBlueButton","color","borderRight","main","borderLeft","boxShadow","dark","PeriodTypeSelect","Typography","sx","textTransform","CalendarToolbarWrapper","CalendarToolbar","typePeriod","ButtonIcon","ButtonIconStyled","Icon","ButtonIconStyledPlus","Container","Text","CheckboxLabel","CheckboxInput","CheckboxStyle","prop","checked","InnerCircleStyle","CheckboxSpan","value","label","onChange","required","TaskForm","TaskFormWrap","TaskFormLabel","TaskFormInputWrap","TaskFormLabelWrap","TaskFormCheckboxWrap","TaskFormButtonWrap","TaskFormButtonAdd","TaskFormButtonAddSpan","TaskFormButtonCancel","CustomTextField","TextField","CustomTimeField","TimeField","handleSubmit","useState","startValue","setStartValue","endValue","setEndValue","selectedOption","setSelectedOption","formTitle","setFormTitle","isFormValid","setIsFormValid","handleCheckboxChange","htmlFor","id","variant","placeholder","event","LocalizationProvider","dateAdapter","AdapterDayjs","newValue","start","end","priority","columnHeadBtn","isModalOpen","setIsOpenModal","handleToggle","pS","useAddTaskMutation","addTask","res","error","name","Modal","Title","taskColumnTitle","IconStyled","List","Item","ContainerInfo","ContainerUser","Priority","componentStyle","taskTypes","todayTasks","currentDay","checkValididty","taskType","Object","fromEntries","entries","filter","getTodayTasksFromAll","keys","sprite","href"],"sourceRoot":""}